"use client";

import { useState } from "react";
import { pinJSON } from "../../../lib/nft/ipfs";
import { mintWithFee } from "../../../lib/nft/sdk";
import TxToast from "../common/TxToast";
import { DEFAULT_CHAIN } from "../../../lib/nft/chains";

export default function MintDialog({
  image,
  onMinted,
}: {
  image: string;
  onMinted?: (tokenId: string) => void;
}) {
  const [name, setName] = useState("My AI NFT");
  const [desc, setDesc] = useState("Generated by GAD AI Studio");
  const [busy, setBusy] = useState(false);
  const [hash, setHash] = useState<string | null>(null);

  const handleMint = async () => {
    try {
      setBusy(true);
      const metadata = { name, description: desc, image };
      const { url } = await pinJSON(metadata);
      const tx = await mintWithFee(await window.ethereum.request({ method: "eth_accounts" }).then((a:any)=>a[0]), url);
      setHash(tx?.hash);
      alert("NFT minted!");
      onMinted?.("new");
    } catch (e: any) {
      console.error(e);
      alert(e?.message ?? "Mint failed");
    } finally {
      setBusy(false);
    }
  };

  return (
    <div className="border rounded p-3 mt-4 bg-[#0E0E12]/80 text-white">
      <div className="font-semibold text-lg mb-2">Mint Generated NFT</div>
      <input
        className="border rounded px-3 py-2 w-full bg-transparent mb-2"
        value={name}
        onChange={(e) => setName(e.target.value)}
        placeholder="Name"
      />
      <textarea
        className="border rounded px-3 py-2 w-full bg-transparent mb-2"
        rows={3}
        value={desc}
        onChange={(e) => setDesc(e.target.value)}
        placeholder="Description"
      />
      <button
        onClick={handleMint}
        disabled={busy}
        className="border border-gold-500 text-gold-300 rounded px-4 py-2 hover:bg-gold-500 hover:text-black transition w-full"
      >
        {busy ? "Mintingâ€¦" : "Mint to Wallet"}
      </button>
      <TxToast hash={hash} explorerBase={DEFAULT_CHAIN.explorer} onClose={() => setHash(null)} />
    </div>
  );
}
